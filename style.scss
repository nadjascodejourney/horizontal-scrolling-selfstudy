// Tutorial von Kevin Powell mit Grid: https://www.youtube.com/watch?v=3yfswsnD2sw

// 1. Horizontales Scrolling von individuellen Elementen innerhalb eines horizontal ausgerichteten Media Scrollers:

div.scroll-wrapper {
  // ich kann mir hier eine Variable für Zwischenraum festlegen:
  // mit Unterstrich kann man CSS sagen, dass es so eine Art freie Variable ist, die nichts mit dem :root zu tun hat
  --_spacer: 1rem;

  display: grid;
  // damit Inhalte sich wie Spalten verhalten (similar to display flex)
  grid-auto-flow: column;
  //  clue mit grid im Vergleich zu flexbox: Alle auto-columns bekommen eine Größe (nicht wie template columns, wo man alle columns einzeln definieren muss!); sinnvoll, wenn man auch noch nicht weiß, wie viele Inhalte die jeweiligen children haben und bei template columns müsste man dann alle Größen nochmal einzeln anpassen; Welcher Wert ist sinnvoll? => keine geraden Teiler von 100, 23% statt 25% beispielsweise, weil der ganze viewport sonst automatisch so aufgeteilt wird, dass alle Platz haben und wir wollen in dem Fall ja overflow erzeugen!
  grid-auto-columns: 26%;
  gap: var(--_spacer);

  // Scrolling auf wrapper anwenden, damit nicht ganze Seite scrollt
  overflow-x: auto;
  // left to right ist inline, daher inline;
  overscroll-behavior-inline: contain;

  // versteckt scrollleiste unten
  // &::-webkit-scrollbar {
  //   display: none;
  // }
}

div.scroll-box {
  display: grid;
  // grid-template-rows: min-content;
  gap: var(--_spacer);
  height: 200px;
  background-color: rgb(221, 221, 248);
  border: 1px solid;
  border-radius: 5px;
  padding: var(--_spacer);
}

div.content {
  display: inline;
  background-color: palegoldenrod;
  border: 1px solid;
  width: 100%;
}
